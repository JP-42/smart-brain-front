{"ast":null,"code":"var _jsxFileName = \"/Users/johnpete/Dropbox/09.CODING/1. Tutorials/complete web developer in 2020 - from zero to mastery/Smart Brain - Final/face-recognition-brain-master/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css'; //You must add your own API key here from Clarifai.\n\nconst app = new Clarifai.App({\n  apiKey: 'a1865cfae8454d9cba2bf5c826b969f6'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 20\n      }\n    }), \" \", route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 20\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 20\n      }\n    }), \" \") : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 26\n      }\n    }), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/johnpete/Dropbox/09.CODING/1. Tutorials/complete web developer in 2020 - from zero to mastery/Smart Brain - Final/face-recognition-brain-master/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n//You must add your own API key here from Clarifai.\nconst app = new Clarifai.App({\n    apiKey: 'a1865cfae8454d9cba2bf5c826b969f6'\n});\n\nconst particlesOptions = {\n    particles: {\n        number: {\n            value: 30,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        }\n    }\n}\n\nconst initialState = {\n    input: '',\n    imageUrl: '',\n    box: {},\n    route: 'signin',\n    isSignedIn: false,\n    user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n    }\n}\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            input: '',\n            imageUrl: '',\n            box: {},\n            route: 'signin',\n            isSignedIn: false,\n            user: {\n                id: '',\n                name: '',\n                email: '',\n                entries: 0,\n                joined: ''\n            }\n        }\n    }\n\n    loadUser = (data) => {\n        this.setState({\n            user: {\n                id: data.id,\n                name: data.name,\n                email: data.email,\n                entries: data.entries,\n                joined: data.joined\n            }\n        })\n    }\n\n    calculateFaceLocation = (data) => {\n        const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n        const image = document.getElementById('inputimage');\n        const width = Number(image.width);\n        const height = Number(image.height);\n        return {\n            leftCol: clarifaiFace.left_col * width,\n            topRow: clarifaiFace.top_row * height,\n            rightCol: width - (clarifaiFace.right_col * width),\n            bottomRow: height - (clarifaiFace.bottom_row * height)\n        }\n    }\n\n    displayFaceBox = (box) => {\n        this.setState({ box: box });\n    }\n\n    onInputChange = (event) => {\n        this.setState({ input: event.target.value });\n    }\n\n    onButtonSubmit = () => {\n        this.setState({ imageUrl: this.state.input });\n        app.models\n            .predict(\n                Clarifai.FACE_DETECT_MODEL,\n                this.state.input)\n            .then(response => {\n                if (response) {\n                    fetch('http://localhost:3000/image', {\n                            method: 'put',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({\n                                id: this.state.user.id\n                            })\n                        })\n                        .then(response => response.json())\n                        .then(count => {\n                            this.setState(Object.assign(this.state.user, { entries: count }))\n                        })\n                        .catch(console.log)\n\n                }\n                this.displayFaceBox(this.calculateFaceLocation(response))\n            })\n            .catch(err => console.log(err));\n    }\n\n    onRouteChange = (route) => {\n        if (route === 'signout') {\n            this.setState(initialState)\n        } else if (route === 'home') {\n            this.setState({ isSignedIn: true })\n        }\n        this.setState({ route: route });\n    }\n\n    render() {\n        const { isSignedIn, imageUrl, route, box } = this.state;\n        return ( <\n                div className = \"App\" >\n                <\n                Particles className = 'particles'\n                params = { particlesOptions }\n                /> <\n                Navigation isSignedIn = { isSignedIn }\n                onRouteChange = { this.onRouteChange }\n                /> {\n                route === 'home' ?\n                <\n                div >\n                <\n                Logo / >\n                <\n                Rank name = { this.state.user.name }\n                entries = { this.state.user.entries }\n                /> <\n                ImageLinkForm onInputChange = { this.onInputChange }\n                onButtonSubmit = { this.onButtonSubmit }\n                /> <\n                FaceRecognition box = { box }\n                imageUrl = { imageUrl }\n                /> < /\n                div > : (\n                    route === 'signin' ?\n                    <\n                    Signin loadUser = { this.loadUser }\n                    onRouteChange = { this.onRouteChange }\n                    /> : <\n                    Register loadUser = { this.loadUser }\n                    onRouteChange = { this.onRouteChange }\n                    />\n                )\n            } <\n            /div>\n    );\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}